// Auto-generated from post_details.html.
// DO NOT EDIT.

library x_post_insights;

import 'dart:html' as autogenerated;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;
import 'package:web_ui/observe/observable.dart' as __observe;
import 'post_interaction.dart';
import 'dart:html';
import 'dart:math' as Math;
import 'package:web_ui/web_ui.dart';
import 'package:intl/intl.dart';
import 'package:intl/date_symbol_data_local.dart';



/**
 * [FacebookPagePostInsight] represents a view for selected page post.
 */
class FacebookPostInsightView extends WebComponent {
  /** Autogenerated from the template. */

  autogenerated.ScopedCssMapper _css;

  /** This field is deprecated, use getShadowRoot instead. */
  get _root => getShadowRoot("x-post-insights");
  static final __html1 = new autogenerated.Element.html('<div class="no-post-image">No image</div>'), __html2 = new autogenerated.Element.html('<img class="img-polaroid">'), __html3 = new autogenerated.Element.html('<i>No message available</i>'), __html4 = new autogenerated.Element.html('<p class="post-message-body"></p>'), __html5 = new autogenerated.Element.html('<button data-action="add-single-post" class="btn btn-large btn-primary" type="button">Add to spreadsheet</button>'), __html6 = new autogenerated.Element.html('<button class="btn btn-large btn-warning" type="button">Log in to Google Service</button>'), __shadowTemplate = new autogenerated.DocumentFragment.html('''
         
         <div class="row-fluid post-insights">
          <div class="span12">
            <h2 class="wide-title">Post insights</h2>
          </div>
        </div>
        
        <div is="x-post-interaction"></div>
        
        <div class="row-fluid post-insights">
          <div class="span12">
            <div class="post-meta-data">
              <span class="post-create-time"></span>
              <span class="post-description"></span>
            </div>
          </div>
        </div>
        
        
        <!-- Posts insights container -->
        <div class="row-fluid post-insights">
          <div class="span6">
            <div class="post-image-container">
              <template></template>
              <template></template>
            </div>
          </div>
          <div class="span6">
            <div class="post-message">
              <template></template>
              <template></template>
            </div>
            <div class="insights-widget row-fluid">
              <span class="span12">
                  <strong class="reach-value"></strong> People Reached
              </span>
            </div>
              
            <div class="insights-widget row-fluid">
              <span class="span4">
                  <h3>Likes</h3>
                  <span class="value"><strong></strong></span>
              </span>
              <span class="span4">
                  <h3>Shares</h3>
                  <span class="value"><strong></strong></span>
              </span>
              <span class="span4">
                  <h3>Comments</h3>
                  <span class="value"><strong></strong></span>
              </span>
            </div>
            
            <div class="post-actions">
              <template></template>
              <template></template>
            </div>
          </div>
        </div>
        <div class="row-fluid post-insights">
        <div class="span12">
          <dl class="dl-horizontal">
            <dt>Talking about this:</dt>
            <dd></dd>
            <dt>Unique likes:</dt>
            <dd></dd>
            <dt>Unique shares:</dt>
            <dd></dd>
            <dt>Unique comments:</dt>
            <dd></dd>
          </dl>
        </div>
        </div>
        
       ''');
  autogenerated.DivElement __e79;
  autogenerated.Element __e100, __e101, __e103, __e105, __e107, __e109, __e84, __e86, __e87, __e90, __e92, __e94, __e96, __e98;
  autogenerated.SpanElement __e81, __e83;
  autogenerated.Template __t;

  void created_autogenerated() {
    var __root = createShadowRoot("x-post-insights");
    setScopedCss("x-post-insights", new autogenerated.ScopedCssMapper({"x-post-insights":"[is=\"x-post-insights\"]"}));
    _css = getScopedCss("x-post-insights");
    __t = new autogenerated.Template(__root);
    __root.nodes.add(__shadowTemplate.clone(true));
    __e79 = __root.nodes[3];
    __t.oneWayBind(() => ctrl, (e) { if (__e79.xtag.fbi != e) __e79.xtag.fbi = e; }, false, false);
    __t.oneWayBind(() => false, (e) { if (__e79.xtag.inlist != e) __e79.xtag.inlist = e; }, false, false);
    __t.component(new PostInteraction()..host = __e79);
    __e81 = __root.nodes[5].nodes[1].nodes[1].nodes[1];
    var __binding80 = __t.contentBind(() => created_time, false);
    __e81.nodes.add(__binding80);
    __e83 = __root.nodes[5].nodes[1].nodes[1].nodes[3];
    var __binding82 = __t.contentBind(() => postData['description'] == null ? '' : postData['description'], false);
    __e83.nodes.add(__binding82);
    __e84 = __root.nodes[9].nodes[1].nodes[1].nodes[1];
    __t.conditional(__e84, () => postPicture == null, (__t) {
    __t.addAll([new autogenerated.Text('\n                '),
        __html1.clone(true),
        new autogenerated.Text('\n              ')]);
    });

    __e86 = __root.nodes[9].nodes[1].nodes[1].nodes[3];
    __t.conditional(__e86, () => postPicture != null, (__t) {
      var __e85;
      __e85 = __html2.clone(true);
      __t.oneWayBind(() => postPicture['height'], (e) { if (__e85.dataset['height'] != e) __e85.dataset['height'] = e; }, false, false);
      __t.oneWayBind(() => postPicture['width'], (e) { if (__e85.dataset['width'] != e) __e85.dataset['width'] = e; }, false, false);
      __t.oneWayBind(() => postPicture['src'], (e) { if (__e85.src != e) __e85.src = e; }, false, true);
    __t.addAll([new autogenerated.Text('\n                '),
        __e85,
        new autogenerated.Text('\n              ')]);
    });

    __e87 = __root.nodes[9].nodes[3].nodes[1].nodes[1];
    __t.conditional(__e87, () => postData['message'] == null, (__t) {
    __t.addAll([new autogenerated.Text('\n                '),
        __html3.clone(true),
        new autogenerated.Text('\n              ')]);
    });

    __e90 = __root.nodes[9].nodes[3].nodes[1].nodes[3];
    __t.conditional(__e90, () => postData['message'] != null, (__t) {
      var __e89;
      __e89 = __html4.clone(true);
      var __binding88 = __t.contentBind(() => postData['message'], false);
      __e89.nodes.add(__binding88);
    __t.addAll([new autogenerated.Text('\n                '),
        __e89,
        new autogenerated.Text('\n              ')]);
    });

    __e92 = __root.nodes[9].nodes[3].nodes[3].nodes[1].nodes[1];
    var __binding91 = __t.contentBind(() => post_impressions_unique, false);
    __e92.nodes.add(__binding91);
    __e94 = __root.nodes[9].nodes[3].nodes[5].nodes[1].nodes[3].nodes[0];
    var __binding93 = __t.contentBind(() => (post_stories_by_action_type == null || post_stories_by_action_type['like'] == null) ? 0 : post_stories_by_action_type['like'], false);
    __e94.nodes.add(__binding93);
    __e96 = __root.nodes[9].nodes[3].nodes[5].nodes[3].nodes[3].nodes[0];
    var __binding95 = __t.contentBind(() => (post_stories_by_action_type == null || post_stories_by_action_type['share'] == null) ? 0 : post_stories_by_action_type['share'], false);
    __e96.nodes.add(__binding95);
    __e98 = __root.nodes[9].nodes[3].nodes[5].nodes[5].nodes[3].nodes[0];
    var __binding97 = __t.contentBind(() => (post_stories_by_action_type == null || post_stories_by_action_type['comment'] == null) ? 0 : post_stories_by_action_type['comment'], false);
    __e98.nodes.add(__binding97);
    __e100 = __root.nodes[9].nodes[3].nodes[7].nodes[1];
    __t.conditional(__e100, () => ctrl.isGoogleConnected, (__t) {
      var __e99;
      __e99 = __html5.clone(true);
      __t.oneWayBind(() => postData['post_id'], (e) { if (__e99.dataset['postid'] != e) __e99.dataset['postid'] = e; }, false, false);
    __t.addAll([new autogenerated.Text('\n                '),
        __e99,
        new autogenerated.Text('\n              ')]);
    });

    __e101 = __root.nodes[9].nodes[3].nodes[7].nodes[3];
    __t.conditional(__e101, () => !ctrl.isGoogleConnected, (__t) {
    __t.addAll([new autogenerated.Text('\n                '),
        __html6.clone(true),
        new autogenerated.Text('\n              ')]);
    });

    __e103 = __root.nodes[11].nodes[1].nodes[1].nodes[3];
    var __binding102 = __t.contentBind(() => post_storytellers, false);
    __e103.nodes.add(__binding102);
    __e105 = __root.nodes[11].nodes[1].nodes[1].nodes[7];
    var __binding104 = __t.contentBind(() => (post_story_adds_by_action_type_unique == null || post_story_adds_by_action_type_unique['like'] == null) ? 0 : post_story_adds_by_action_type_unique['like'], false);
    __e105.nodes.add(__binding104);
    __e107 = __root.nodes[11].nodes[1].nodes[1].nodes[11];
    var __binding106 = __t.contentBind(() => (post_story_adds_by_action_type_unique == null || post_story_adds_by_action_type_unique['share'] == null) ? 0 : post_story_adds_by_action_type_unique['share'], false);
    __e107.nodes.add(__binding106);
    __e109 = __root.nodes[11].nodes[1].nodes[1].nodes[15];
    var __binding108 = __t.contentBind(() => (post_story_adds_by_action_type_unique == null || post_story_adds_by_action_type_unique['comment'] == null) ? 0 : post_story_adds_by_action_type_unique['comment'], false);
    __e109.nodes.add(__binding108);
    __t.create();
  }

  void inserted_autogenerated() {
    __t.insert();
  }

  void removed_autogenerated() {
    __t.remove();
    __t = __e79 = __e81 = __e83 = __e84 = __e86 = __e87 = __e90 = __e92 = __e94 = __e96 = __e98 = __e100 = __e101 = __e103 = __e105 = __e107 = __e109 = null;
  }

  /** Original code from the component. */

  
  
  void created(){
    initializeDateFormatting(window.navigator.language, null).then((_){});
  }
  
  
  /// The controller
  var ctrl;
  /// [0] => [{}]
  /// [1] => [{post_id,created_time,message,type,permalink,description,attachment{media{href,alt,type,src}}}]
  get insights => ctrl.pagePostInsights;
  
  get postData => insights[1][0];
  get postPicture {
    try{
      var img = insights[1][0]['attachment']['media'][0]['photo']['images'][1];
      return {
        'src':img['src'],
        'width':img['width'].toString(),
        'height':img['height'].toString()
      };
    } catch(e){
      return null;
    }
  }
  
  get post_impressions_unique => (getMetricValue('post_impressions_unique') == null) ? 0 : getMetricValue('post_impressions_unique');
  get post_stories_by_action_type => getMetricValue('post_stories_by_action_type');
  get post_story_adds_by_action_type_unique => getMetricValue('post_story_adds_by_action_type_unique');
  get post_storytellers => (getMetricValue('post_storytellers') == null) ? 0 : getMetricValue('post_storytellers');
  
  String _created_time;
  ///Get formatted time string
  String get created_time { 
    if(_created_time == null){
      DateFormat df = new DateFormat.yMMMMd(window.navigator.language).add_Hm();
      _created_time = df.format(new DateTime.fromMillisecondsSinceEpoch(postData['created_time']*1000));
    }
    return _created_time;
  }
  
  double get virality {
    double res = post_storytellers/post_impressions_unique*100;
    int pow = Math.pow(10, 2);
    return (res*pow).round() / pow;
  }
  
  var _cache = {};
  getMetricValue(String insight_metric) {
    if(_cache[insight_metric] == null){
      var data = insights[0];
      var len = data.length;
      for(int i=0; i<len; i++){
        if(data[i]['metric'] == insight_metric){
          _cache[insight_metric] = data[i].value;
          break;
        }
      }
      if(_cache[insight_metric] == null){
        _cache[insight_metric] = false;
      }
    } else if(_cache[insight_metric] == false){
      return null;
    }
    return _cache[insight_metric];
  }
  
  
}
//# sourceMappingURL=post_details.dart.map