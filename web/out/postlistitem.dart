// Auto-generated from postlistitem.html.
// DO NOT EDIT.

library x_facebook_post_list_item;

import 'dart:html' as autogenerated;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;
import 'package:web_ui/observe/observable.dart' as __observe;
import '_from_packages/widget/components/alert.dart';
import 'dart:html';
import 'package:web_ui/web_ui.dart';



class FacebookPostListItemComponent extends WebComponent with Observable  {
  /** Autogenerated from the template. */

  autogenerated.ScopedCssMapper _css;

  /** This field is deprecated, use getShadowRoot instead. */
  get _root => getShadowRoot("x-facebook-post-list-item");
  static final __html1 = new autogenerated.Element.html('<span class="post-strory"></span>'), __html2 = new autogenerated.Element.html('<img class="img-polaroid">'), __html3 = new autogenerated.Element.html('<div class="span3 postactions">\n              <input type="button" data-action="show-post-details" class="btn" value="details">\n              <input type="button" data-action="add-single-post" class="btn btn-primary" value="Add to report">\n              <div class="hidden">\n                <div class="bar" style="width: 100%"></div>\n              </div>\n            </div>'), __shadowTemplate = new autogenerated.DocumentFragment.html('''
        
        <div class="facebook-post-item-container ">
        
        <div class="row-fluid post-list-item">
          <div class="span1 postselector hidden-on-post-details">
            <input type="checkbox">
          </div>
          
          <div class=" pagename">
            <div class="post-attributtes">
              <span class="post-created"></span>
              <template></template>
            </div>
            <div class="post-content">
              <template></template>
            </div>
          </div>
          
          <div class=" postimage">
            <template></template>
          </div>
          <template></template>
        </div>
        <div is="x-alert" class="hidden">
          <button type="button" class="close" data-dismiss="alert">x</button>
          <h4 class="alert-heading">Oh snap!</h4>
          <p>It seems that this post won\'t be inserted to spreadsheet because lack of statistics. If you think it is an error, contact support.</p>
          <p>
            <a data-dismiss="alert" class="btn" href="#">Close</a>
          </p>
        </div>
        </div>
      ''');
  autogenerated.AnchorElement __e57;
  autogenerated.DivElement __e47, __e50, __e56, __e58, __e59;
  autogenerated.Element __e44, __e46, __e49, __e55;
  autogenerated.InputElement __e39;
  autogenerated.SpanElement __e41;
  autogenerated.Template __t;

  void created_autogenerated() {
    var __root = createShadowRoot("x-facebook-post-list-item");
    setScopedCss("x-facebook-post-list-item", new autogenerated.ScopedCssMapper({"x-facebook-post-list-item":"[is=\"x-facebook-post-list-item\"]"}));
    _css = getScopedCss("x-facebook-post-list-item");
    __t = new autogenerated.Template(__root);
    __root.nodes.add(__shadowTemplate.clone(true));
    __e59 = __root.nodes[1];
    __e56 = __e59.nodes[1];
    __e39 = __e56.nodes[1].nodes[1];
    __t.listen(__e39.onChange, ($event) { selection = __e39.checked; });
    __t.oneWayBind(() => selection, (e) { if (__e39.checked != e) __e39.checked = e; }, false, false);
    __t.oneWayBind(() => post['id'], (e) { if (__e39.dataset['postid'] != e) __e39.dataset['postid'] = e; }, false, false);
    __t.oneWayBind(() => post['id'], (e) { if (__e39.value != e) __e39.value = e; }, false, false);
    __e47 = __e56.nodes[3];
    __e41 = __e47.nodes[1].nodes[1];
    var __binding40 = __t.contentBind(() => post['created_time'], false);
    __e41.nodes.add(__binding40);
    __e44 = __e47.nodes[1].nodes[3];
    __t.conditional(__e44, () => post['story'] != null, (__t) {
      var __e43;
      __e43 = __html1.clone(true);
      var __binding42 = __t.contentBind(() => post['story'], false);
      __e43.nodes.add(__binding42);
    __t.add(__e43);
    });

    __e46 = __e47.nodes[3].nodes[1];
    __t.conditional(__e46, () => post['message'] != null, (__t) {
      var __binding45 = __t.contentBind(() => post['message'], false);
    __t.add(__binding45);
    });

    __t.bindClass(__e47, () => pageNameClass, false);
    __e50 = __e56.nodes[5];
    __e49 = __e50.nodes[1];
    __t.conditional(__e49, () => post['picture'] != null, (__t) {
      var __e48;
      __e48 = __html2.clone(true);
      __t.oneWayBind(() => post['picture'], (e) { if (__e48.src != e) __e48.src = e; }, false, true);
    __t.addAll([new autogenerated.Text('\n              '),
        __e48,
        new autogenerated.Text('\n            ')]);
    });

    __t.bindClass(__e50, () => postimageClass, false);
    __e55 = __e56.nodes[7];
    __t.conditional(__e55, () => !ctrl.postSelectedMode, (__t) {
      var __e51, __e52, __e53, __e54;
      __e54 = __html3.clone(true);
      __e51 = __e54.nodes[1];
      __t.oneWayBind(() => post['id'], (e) { if (__e51.dataset['postid'] != e) __e51.dataset['postid'] = e; }, false, false);
      __e52 = __e54.nodes[3];
      __t.oneWayBind(() => post['id'], (e) { if (__e52.dataset['postid'] != e) __e52.dataset['postid'] = e; }, false, false);
      __e53 = __e54.nodes[5];
      __t.oneWayBind(() => post['id'], (e) { if (__e53.dataset['postindicator'] != e) __e53.dataset['postindicator'] = e; }, false, false);
    __t.addAll([new autogenerated.Text('\n            '),
        __e54,
        new autogenerated.Text('\n          ')]);
    });

    __t.listen(__e56.onClick, ($event) { changeSelection($event); });
    __t.oneWayBind(() => post['id'], (e) { if (__e56.dataset['postid'] != e) __e56.dataset['postid'] = e; }, false, false);
    __e58 = __e59.nodes[3];
    __e57 = __e58.nodes[7].nodes[1];
    __t.listen(__e57.onClick, ($event) { $event.preventDefault(); $event.target.parent.parent.parent.xtag.hide(); });
    __t.component(new Alert()..host = __e58);
    __t.bindClass(__e59, () => containerClass, false);
    __t.create();
  }

  void inserted_autogenerated() {
    __t.insert();
  }

  void removed_autogenerated() {
    __t.remove();
    __t = __e59 = __e56 = __e39 = __e47 = __e41 = __e44 = __e46 = __e50 = __e49 = __e55 = __e58 = __e57 = null;
  }

  /** Original code from the component. */

  var post;
  dynamic __$ctrl;
  dynamic get ctrl {
    if (__observe.observeReads) {
      __observe.notifyRead(this, __observe.ChangeRecord.FIELD, 'ctrl');
    }
    return __$ctrl;
  }
  set ctrl(dynamic value) {
    if (__observe.hasObservers(this)) {
      __observe.notifyChange(this, __observe.ChangeRecord.FIELD, 'ctrl',
          __$ctrl, value);
    }
    __$ctrl = value;
  }
  bool __$selection = false;
  bool get selection {
    if (__observe.observeReads) {
      __observe.notifyRead(this, __observe.ChangeRecord.FIELD, 'selection');
    }
    return __$selection;
  }
  set selection(bool value) {
    if (__observe.hasObservers(this)) {
      __observe.notifyChange(this, __observe.ChangeRecord.FIELD, 'selection',
          __$selection, value);
    }
    __$selection = value;
  }
  @observable String get containerClass => selection ? 'selected' : '';
  
  String get pageNameClass => ctrl.postSelectedMode ? 'span8' : 'span7';
  String get postimageClass => ctrl.postSelectedMode ? 'span3' : 'span1';
  
  void changeSelection(Event e){
    if((e.target as Element).localName.toLowerCase() == "input"){
      return;
    }
    //inform controler
    if(ctrl == null) return;
    ctrl.select(post['id'], !selection);
  }
}
//# sourceMappingURL=postlistitem.dart.map